"""
Django settings for xvun project.

Generated by 'django-admin startproject' using Django 5.1.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

import os
import json
import logging

from datetime import timedelta
from pathlib import Path
from dotenv import load_dotenv


load_dotenv(dotenv_path=".env")
logging.basicConfig(format="[%(asctime)s] | %(levelname)s: %(message)s", level=logging.INFO, datefmt='%m.%d.%Y %H:%M:%S')

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv("DOC_SECRET_KEY", os.environ["SECRET_KEY"])

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = bool(os.getenv("DOC_DEBUG", os.environ["DEBUG"])) 

ALLOWED_HOSTS = json.loads(os.getenv("DOC_ALLOWED_HOSTS", os.environ["ALLOWED_HOSTS"]))


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'rest_framework',
    'debug_toolbar',

    # OpenAPI
    'drf_yasg',

    # Apps
    'apps.main.apps.MainConfig',
    'apps.user.apps.UserConfig',
]

MIDDLEWARE = [
    'debug_toolbar.middleware.DebugToolbarMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': os.environ.get('DOC_ENGINE', os.environ['ENGINE_DB']),
        'NAME': os.environ.get('DOC_NAME', os.environ['NAME_DB']),
        'USER': os.environ.get('DOC_USER', os.environ['USER_DB']),
        'PASSWORD': os.environ.get('DOC_PASSWORD', os.environ['PASSWORD_DB']),
        'HOST': os.environ.get('DOC_HOST_DB', os.environ['HOST_DB']),
        'PORT': os.environ.get('DOC_PORT_DB', os.environ['PORT_DB']),

        'DISABLE_SERVER_SIDE_CURSORS': True,

        'TEST': {'NAME': os.path.join(BASE_DIR, "test_db")}
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

DATETIME_FORMAT = "d.m.Y G:i:s"

DATETIME_INPUT_FORMATS = ["d.m.Y G:i:s"]


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = '/static/'

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR.parent, 'media')

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

LOGIN_REDIRECT_URL = "/api/v1/"

AUTH_USER_MODEL = "user.User"


# REST framework settings

REST_FRAMEWORK = {
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 15,
    # 'DEFAULT_AUTHENTICATION_CLASSES': (
    #     # Custom auth by JWTToken
    #     'src.user.auth.backends.JWTTokenAuthBackend',
    # ),
    # 'DEFAULT_THROTTLE_RATES': {
    #     'user': '2/min'
    # },
    # 'DEFAULT_VERSIONING_CLASS': 'rest_framework.versioning.NamespaceVersioning',
    'DEFAULT_VERSION': 'v1.0.0',
    'ALLOWED_VERSIONS': ('v1.0.0',),
    'DATETIME_FORMAT': '%d.%m.%Y %H:%M:%S',
    'DATETIME_INPUT_FORMATS': '%d.%m.%Y %H:%M:%S',
    'COMPACT_JSON': False,
}


# Swagger settings

SWAGGER_SETTINGS = {
    'USE_SESSION_AUTH': True,
    # 'USE_SESSION_AUTH': False,
    # 'SECURITY_DEFINITIONS': {
    #     'Bearer': {
    #         'type': 'apiKey',
    #         'name': 'Authorization',
    #         'in': 'header'
    #     }
    # }
}


# JWTToken settings

JWT_SETTINGS = {
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=90),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=60),
    'ALGORITHM': 'HS256',

    'AUTH_HEADER_TYPES': 'Bearer',
    'USER_ID_FIELD': 'id',
    'USER_ID_CLAIM': 'user_id',

    'AUTH_TOKEN_CLASSES': ('src.user.auth.models.JWTToken',), 
}


# Other

INTERNAL_IPS = [
    '127.0.0.1',
    '0.0.0.0'
]